----------------------------------------------------------
--Declaracion de paquete nivel 1 para la tabla ACTIVIDADES
----------------------------------------------------------
CREATE OR REPLACE PACKAGE pkActividadNivel1 AS
  PROCEDURE pAgregarActividad (iID ACTIVIDADES.ID%TYPE,
                               iPRIORIDAD ACTIVIDADES.PRIORIDAD%TYPE,
                               iFECHA_INICIO ACTIVIDADES.FECHA_INICIO%TYPE,
                               iFECHA_FIN ACTIVIDADES.FECHA_FIN%TYPE,
                               iDESCRIPCION ACTIVIDADES.DESCRIPCION%TYPE,
                               iNOMBRE ACTIVIDADES.NOMBRE%TYPE,
                               iTEMPORALIDAD ACTIVIDADES.TEMPORALIDAD%TYPE,
                               iCANTIDADREPETICIONES ACTIVIDADES.CANTIDADREPETICIONES%TYPE,
                               iPROYECTOID ACTIVIDADES.PROYECTOID%TYPE,
                               iESTADOCONSECUTIVO ACTIVIDADES.ESTADOCONSECUTIVO%TYPE,
                               iCATEGORIAID ACTIVIDADES.CATEGORIAID%TYPE);
  PROCEDURE pEliminarActividad (iAct ACTIVIDADES.ID%TYPE);
  PROCEDURE pModificarActividad (ivFILA ACTIVIDADES%ROWTYPE);
  FUNCTION fConsultarActividad (idAct ACTIVIDADES.ID%TYPE) RETURN ACTIVIDADES%ROWTYPE;
END pkActividadNivel1;
/

CREATE OR REPLACE PACKAGE BODY pkActividadNivel1 AS

  PROCEDURE pAgregarActividad (
    iID ACTIVIDADES.ID%TYPE,
    iPRIORIDAD ACTIVIDADES.PRIORIDAD%TYPE,
    iFECHA_INICIO ACTIVIDADES.FECHA_INICIO%TYPE,
    iFECHA_FIN ACTIVIDADES.FECHA_FIN%TYPE,
    iDESCRIPCION ACTIVIDADES.DESCRIPCION%TYPE,
    iNOMBRE ACTIVIDADES.NOMBRE%TYPE,
    iTEMPORALIDAD ACTIVIDADES.TEMPORALIDAD%TYPE,
    iCANTIDADREPETICIONES ACTIVIDADES.CANTIDADREPETICIONES%TYPE,
    iPROYECTOID ACTIVIDADES.PROYECTOID%TYPE,
    iESTADOCONSECUTIVO ACTIVIDADES.ESTADOCONSECUTIVO%TYPE,
    iCATEGORIAID ACTIVIDADES.CATEGORIAID%TYPE )
  IS

  BEGIN

    INSERT INTO ACTIVIDADES VALUES (iID,iPRIORIDAD, iFECHA_INICIO, iFECHA_FIN, iDESCRIPCION, iNOMBRE,iTEMPORALIDAD,iCANTIDADREPETICIONES,
                                          iPROYECTOID,iESTADOCONSECUTIVO,iCATEGORIAID);
  EXCEPTION

    WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE('Error al insertar una actividad. Funcion pAgregarActividad nivel 1.' || SQLERRM);

  END pAgregarActividad;

  PROCEDURE pEliminarActividad(iAct ACTIVIDADES.ID%TYPE)
  IS

  BEGIN

    DELETE FROM ACTIVIDADES
    WHERE ACTIVIDADES.ID = iAct;

  EXCEPTION

    WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE('Error al eliminar una actividad. Funcion pEliminarActividad nivel 1.' || SQLERRM);

  END pEliminarActividad;

  FUNCTION fConsultarActividad (idAct ACTIVIDADES.ID%TYPE) RETURN ACTIVIDADES%ROWTYPE

  IS

    Actividad ACTIVIDADES%ROWTYPE;

  BEGIN

      SELECT * INTO Actividad
      FROM ACTIVIDADES
      WHERE ID = idAct;

      RETURN  Actividad;

  EXCEPTION

    WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE('Error al consultar actividad. Funcion fConsultarActividad nivel 1.' || SQLERRM);

  END fConsultarActividad;

  PROCEDURE pModificarActividad(ivFILA ACTIVIDADES%ROWTYPE)

  IS

    BEGIN

      UPDATE ACTIVIDADES
      SET
        PRIORIDAD = ivFILA.PRIORIDAD,
        FECHA_INICIO = ivFILA.FECHA_INICIO,
        FECHA_FIN = ivFILA.FECHA_FIN,
        DESCRIPCION = ivFILA.DESCRIPCION,
        NOMBRE = ivFILA.NOMBRE,
        TEMPORALIDAD = ivFILA.TEMPORALIDAD,
        CANTIDADREPETICIONES = ivFILA.CANTIDADREPETICIONES,
        PROYECTOID = ivFILA.PROYECTOID,
        ESTADOCONSECUTIVO = ivFILA.ESTADOCONSECUTIVO,
        CATEGORIAID = ivFILA.CATEGORIAID
      WHERE
        ID = ivFILA.ID;

      EXCEPTION

      WHEN
      OTHERS
      THEN
      DBMS_OUTPUT.PUT_LINE('OOPS... ERROR' || SQLERRM);

    END pModificarActividad;

END pkActividadNivel1;